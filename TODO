**************************************
*            TODO LIST               *
**************************************

1.) Add a NeuralNet function which takes an examples iterator, an expected output iterator, and a batchsize,
    and the automatically trains the networks.
    ex. 
        std::iterator examples_iterator = examples();
        std::iterator expect_iterator = expect();
        size_t batch_size = 10; // The training batch size
        NeuralNetworkFF net(parameters...); // Create the network
        net.train(examples_iterator, expect_iterator, batch_size); // Train the network

2.) Add a NeuralNet function that makes it easy to test the neural network and return the results to the user.
    ex.
        struct NetTestResults{
            size_t correct: <int>,
            size_t incorrect: <int>,
            size_t total: correct + incorrect,
            double correct_rate = <double>,
            size_t batch_size = <double>,
            ...
        }

        std::iterator test_input_interator = test_input();
        std::iterator test_expect_iterator = expect_input();

        NeuralNetworkFF net(parameters...);

        struct NetTestResults results = net.test_network(test_input_iterator, test_expect_iterator, <optional> num_examples); 

3.) Add a way that users can save neural networks to a file, and then also load neural networks from the given file.